BROKER SCHEMA BR_APPS_OUT_CW1_PaymentSlips_REC
CREATE COMPUTE MODULE BR_APPS_OUT_CW1_PaymentSlips_REC_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		-- BUSINESS LOGIC: Full message transformation and processing
		DECLARE episInfo 		REFERENCE TO 	Environment.variables.EventData.episInfo;
		DECLARE sourceInfo 		REFERENCE TO 	Environment.variables.EventData.sourceInfo;
		DECLARE targetInfo 		REFERENCE TO 	Environment.variables.EventData.targetInfo;
		DECLARE integrationInfo REFERENCE TO 	Environment.variables.EventData.integrationInfo;
		DECLARE dataInfo 		REFERENCE TO 	Environment.variables.EventData.dataInfo;
		
		-- BUSINESS DATA EXTRACTION: Extract business identifiers and data
		SET dataInfo.mainIdentifier = InputRoot.XMLNSC.[<].*:_BUSINESS_ENTITY_.*:_BUSINESS_IDENTIFIER_;
		
		DECLARE guid1 CHARACTER;
		SET guid1 = PASSTHRU('CALL GenerateGuid()');
		DECLARE currentDateTime1 TIMESTAMP;
		SET currentDateTime1 = PASSTHRU('CALL GetCurrentDateTime()');
		DECLARE guid2 CHARACTER;
		SET guid2 = PASSTHRU('CALL GenerateGuid()');
		DECLARE currentDateTime2 TIMESTAMP;
		SET currentDateTime2 = PASSTHRU('CALL GetCurrentDateTime()');
		
		SET OutputRoot.XMLNSC.*:Guid1 = guid1;
		SET OutputRoot.XMLNSC.*:CurrentDateTime1 = currentDateTime1;
		SET OutputRoot.XMLNSC.*:Guid2 = guid2;
		SET OutputRoot.XMLNSC.*:CurrentDateTime2 = currentDateTime2;
		
		-- STANDARD MESSAGE PROCESSING
		SET OutputRoot = NULL;
		SET OutputRoot = InputRoot;
		
		RETURN TRUE;
	END;

	-- STANDARD IBM ACE INFRASTRUCTURE
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;

END MODULE;