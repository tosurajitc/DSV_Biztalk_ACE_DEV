CREATE COMPUTE MODULE CW1_IN_Document_SND_Compute
CREATE FUNCTION Main() RETURNS BOOLEAN
BEGIN
    
    -- BUSINESS LOGIC: Full message transformation and processing
    DECLARE episInfo         REFERENCE TO  Environment.variables.EventData.episInfo;
    DECLARE sourceInfo       REFERENCE TO  Environment.variables.EventData.sourceInfo;
    DECLARE targetInfo       REFERENCE TO  Environment.variables.EventData.targetInfo;
    DECLARE integrationInfo  REFERENCE TO  Environment.variables.EventData.integrationInfo;
    DECLARE dataInfo         REFERENCE TO  Environment.variables.EventData.dataInfo;
    
    -- BUSINESS DATA EXTRACTION: Extract business identifiers and data
    SET dataInfo.mainIdentifier = InputRoot.XMLNSC.[<].*:.*:;
    SET dataInfo.customReference1 = InputRoot.XMLNSC.[<].*:1_;
    SET dataInfo.customReference2 = InputRoot.XMLNSC.[<].*:2_;
    SET dataInfo.customProperty1 = InputRoot.XMLNSC.[<].*:1_;
    SET dataInfo.customProperty2 = InputRoot.XMLNSC.[<].*:2_;
    
    -- DATABASE OPERATIONS: Business enrichment and lookups
    -- Since no database operations are allowed, this section remains empty
    
    -- BUSINESS TRANSFORMATIONS: Message format conversions
    -- Since no business transformations are allowed, this section remains empty
    
    -- STANDARD MESSAGE PROCESSING
    SET OutputRoot = NULL;
    SET OutputRoot = InputRoot;
    
    RETURN TRUE;
END;

-- STANDARD IBM ACE INFRASTRUCTURE
CREATE PROCEDURE CopyMessageHeaders() BEGIN
    DECLARE I INTEGER 1;
    DECLARE J INTEGER;
    SET J = CARDINALITY(InputRoot.*[]);
    WHILE I < J DO
        SET OutputRoot.*[I] = InputRoot.*[I];
        SET I = I + 1;
    END WHILE;
END;

CREATE PROCEDURE CopyEntireMessage() BEGIN
    SET OutputRoot = InputRoot;
END;

END MODULE;