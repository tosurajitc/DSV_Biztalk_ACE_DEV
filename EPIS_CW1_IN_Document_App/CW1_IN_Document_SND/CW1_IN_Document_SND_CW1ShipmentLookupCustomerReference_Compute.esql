CREATE COMPUTE MODULE CW1_IN_Document_SND_CW1ShipmentLookupCustomerReference_Compute

CREATE FUNCTION Main() RETURNS BOOLEAN
BEGIN
    DECLARE shipmentInfo 		REFERENCE TO 	Environment.variables.EventData.shipmentInfo;
    DECLARE sourceCompany 		REFERENCE TO 	Environment.variables.EventData.sourceCompany;
    DECLARE targetCompany 		REFERENCE TO 	Environment.variables.EventData.targetCompany;
    DECLARE integrationDetails REFERENCE TO 	Environment.variables.EventData.integrationDetails;
    DECLARE dataPayload 		REFERENCE TO 	Environment.variables.EventData.dataPayload;

    SET sourceCompany.CustomsDeclarationId = CAST(proc_CustomsDeclaration_GetIdByReference(shipmentInfo.Reference) AS INTEGER);
    SET targetCompany.MainCompanyInCountry = sp_GetMainCompanyInCountry(shipmentInfo.Country);
    SET dataPayload.EAdapterRecepientId = sp_Get_EAdapterRecepientId(shipmentInfo.SSN);
    SET dataPayload.IsPublishedFlag = proc_EDocument_GetIsPublishedFlag(shipmentInfo.DocumentId);
    SET dataPayload.ShipmentId = sp_Shipment_GetIdBySSN(shipmentInfo.SSN);

    SET OutputRoot.XMLNSC = CAST(XSLT('ShipmentLookupCustomerReference.xsl') AS BLOB);
    SET OutputRoot.XMLNSC = CAST(MapAzureBlobToCDM(shipmentInfo.AzureBlobData) AS BLOB);
    SET OutputRoot.XMLNSC = CAST(TransformDocumentUsingXSLT(shipmentInfo.Document, GetESBEnvironment(), GenerateGuid(), GetCurrentDateTime()) AS BLOB);

    RETURN TRUE;
END;

CREATE PROCEDURE CopyMessageHeaders() BEGIN
    DECLARE I INTEGER 1;
    DECLARE J INTEGER;
    SET J = CARDINALITY(InputRoot.*[]);
    WHILE I < J DO
        SET OutputRoot.*[I] = InputRoot.*[I];
        SET I = I + 1;
    END WHILE;
END;

CREATE PROCEDURE CopyEntireMessage() BEGIN
    SET OutputRoot = InputRoot;
END;
END MODULE;