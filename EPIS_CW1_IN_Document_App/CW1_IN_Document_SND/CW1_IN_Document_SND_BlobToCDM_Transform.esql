CREATE COMPUTE MODULE CW1_IN_Document_SND_BlobToCDM_Transform.esql

CREATE FUNCTION Main() RETURNS BOOLEAN
BEGIN
    DECLARE shipmentInfo 		REFERENCE TO 	Environment.variables.EventData.shipmentInfo;
    DECLARE sourceSystem 		REFERENCE TO 	Environment.variables.EventData.sourceSystem;
    DECLARE targetSystem 		REFERENCE TO 	Environment.variables.EventData.targetSystem;
    DECLARE integrationDetails REFERENCE TO 	Environment.variables.EventData.integrationDetails;
    DECLARE dataPayload 		REFERENCE TO 	Environment.variables.EventData.dataPayload;

    SET sourceSystem.CustomsDeclarationId = CAST(proc_CustomsDeclaration_GetIdByReference(shipmentInfo.Reference) AS INTEGER);
    SET targetSystem.RecepientId = CAST(sp_Get_EAdapterRecepientId(shipmentInfo.SSN) AS INTEGER);
    SET shipmentInfo.IsPublished = CAST(proc_EDocument_GetIsPublishedFlag(shipmentInfo.DocumentId) AS BOOLEAN);
    SET integrationDetails.MainCompanyInCountry = sp_GetMainCompanyInCountry(shipmentInfo.CountryCode);
    SET dataPayload.ShipmentId = CAST(sp_Shipment_GetIdBySSN(shipmentInfo.SSN) AS INTEGER);

    SET OutputRoot.XMLNSC.ShipmentInfo = shipmentInfo;
    SET OutputRoot.XMLNSC.SourceSystem = sourceSystem;
    SET OutputRoot.XMLNSC.TargetSystem = targetSystem;
    SET OutputRoot.XMLNSC.IntegrationDetails = integrationDetails;
    SET OutputRoot.XMLNSC.DataPayload = dataPayload;

    RETURN TRUE;
END;

CREATE PROCEDURE CopyMessageHeaders() BEGIN
    DECLARE I INTEGER 1;
    DECLARE J INTEGER;
    SET J = CARDINALITY(InputRoot.*[]);
    WHILE I < J DO
        SET OutputRoot.*[I] = InputRoot.*[I];
        SET I = I + 1;
    END WHILE;
END;

CREATE PROCEDURE CopyEntireMessage() BEGIN
    SET OutputRoot = InputRoot;
END;
END MODULE;