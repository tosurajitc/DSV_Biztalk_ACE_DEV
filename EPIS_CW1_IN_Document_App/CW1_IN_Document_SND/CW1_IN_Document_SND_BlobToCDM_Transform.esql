CREATE COMPUTE MODULE CW1_IN_Document_SND_BlobToCDM_Transform.esql

CREATE FUNCTION Main() RETURNS BOOLEAN
BEGIN
    DECLARE documentInfo 		REFERENCE TO 	Environment.variables.EventData.documentInfo;
    DECLARE sourceSystem 		REFERENCE TO 	Environment.variables.EventData.sourceSystem;
    DECLARE targetSystem 		REFERENCE TO 	Environment.variables.EventData.targetSystem;
    DECLARE integrationDetails REFERENCE TO 	Environment.variables.EventData.integrationDetails;
    DECLARE dataPayload 		REFERENCE TO 	Environment.variables.EventData.dataPayload;

    SET sourceSystem.SourceName = 'AzureBlob';
    SET targetSystem.TargetName = 'CDM';
    SET integrationDetails.IntegrationID = GetESBEnvironment();
    SET dataPayload.DocumentID = GenerateGuid();

    DECLARE isPublishedFlag BOOLEAN;
    DECLARE recepientId INTEGER;
    DECLARE customsDeclarationId INTEGER;
    DECLARE mainCompanyId INTEGER;
    DECLARE shipmentId INTEGER;

    SET isPublishedFlag = proc_EDocument_GetIsPublishedFlag(documentInfo.DocumentID);
    SET recepientId = sp_Get_EAdapterRecepientId(sourceSystem.SourceName);
    SET customsDeclarationId = proc_CustomsDeclaration_GetIdByReference(documentInfo.ReferenceID);
    SET mainCompanyId = sp_GetMainCompanyInCountry(targetSystem.CountryCode);
    SET shipmentId = sp_Shipment_GetIdBySSN(documentInfo.SSN);

    DECLARE xsltOutput BLOB;
    SET xsltOutput = TransformUsingXSLT(InputRoot, 'AzureBlobToCDM.xsl');
    SET OutputRoot.XMLNSC = xsltOutput;

    SET documentInfo.LastModified = GetCurrentDateTime();
    SET dataPayload.ProcessingStatus = 'Transformed';

    RETURN TRUE;
END;

CREATE PROCEDURE CopyMessageHeaders() BEGIN
    DECLARE I INTEGER 1;
    DECLARE J INTEGER;
    SET J = CARDINALITY(InputRoot.*[]);
    WHILE I < J DO
        SET OutputRoot.*[I] = InputRoot.*[I];
        SET I = I + 1;
    END WHILE;
END;

CREATE PROCEDURE CopyEntireMessage() BEGIN
    SET OutputRoot = InputRoot;
END;
END MODULE;