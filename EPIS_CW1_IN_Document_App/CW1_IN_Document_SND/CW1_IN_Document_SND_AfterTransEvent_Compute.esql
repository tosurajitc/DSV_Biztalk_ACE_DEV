CREATE COMPUTE MODULE CW1_IN_Document_SND_AfterTransEvent_Compute
CREATE FUNCTION Main() RETURNS BOOLEAN
BEGIN
    DECLARE shipmentInfo 		REFERENCE TO 	Environment.variables.EventData.shipmentInfo;
    DECLARE sourceCompany 		REFERENCE TO 	Environment.variables.EventData.sourceCompany;
    DECLARE targetCompany 		REFERENCE TO 	Environment.variables.EventData.targetCompany;
    DECLARE integrationDetails REFERENCE TO 	Environment.variables.EventData.integrationDetails;
    DECLARE documentData 		REFERENCE TO 	Environment.variables.EventData.documentData;

    SET sourceCompany.CompanyName = 'ABC Corporation';
    SET targetCompany.CompanyName = 'XYZ Inc.';
    SET documentData.DocumentType = 'Shipment';

    DECLARE isPublishedFlag BOOLEAN;
    DECLARE recepientId INTEGER;
    DECLARE customsDeclarationId INTEGER;
    DECLARE mainCompanyId INTEGER;
    DECLARE shipmentId INTEGER;

    SET isPublishedFlag = proc_EDocument_GetIsPublishedFlag(documentData.DocumentId);
    SET recepientId = sp_Get_EAdapterRecepientId(shipmentInfo.ShipmentId);
    SET customsDeclarationId = proc_CustomsDeclaration_GetIdByReference(documentData.ReferenceId);
    SET mainCompanyId = sp_GetMainCompanyInCountry(sourceCompany.Country);
    SET shipmentId = sp_Shipment_GetIdBySSN(shipmentInfo.SSN);

    DECLARE xmlRef REFERENCE TO InputRoot.XMLNSC;
    SET OutputRoot.XMLNSC = xmlRef;

    DECLARE msgRef REFERENCE TO InputRoot;
    SET OutputRoot = msgRef;

    DECLARE azureBlobData BLOB;
    SET azureBlobData = InputRoot.AzureBlob;

    DECLARE cdmDocument REFERENCE TO OutputRoot.CDM;
    SET cdmDocument = TransformUsingXSLT(azureBlobData, 'AzureBlobToCDM.xsl');

    SET OutputRoot.CDM = cdmDocument;

    RETURN TRUE;
END;

CREATE PROCEDURE CopyMessageHeaders() BEGIN
    DECLARE I INTEGER 1;
    DECLARE J INTEGER;
    SET J = CARDINALITY(InputRoot.*[]);
    WHILE I < J DO
        SET OutputRoot.*[I] = InputRoot.*[I];
        SET I = I + 1;
    END WHILE;
END;

CREATE PROCEDURE CopyEntireMessage() BEGIN
    SET OutputRoot = InputRoot;
END;
END MODULE;