CREATE COMPUTE MODULE CW1_IN_Document_SND_AfterEnrichment_Compute
CREATE FUNCTION Main() RETURNS BOOLEAN
BEGIN
    DECLARE afterEnrichmentInfo 		REFERENCE TO 	Environment.variables.EventData.afterEnrichmentInfo;
    DECLARE businessLogicInfo 		REFERENCE TO 	Environment.variables.EventData.businessLogicInfo;
    DECLARE processingInfo 		REFERENCE TO 	Environment.variables.EventData.processingInfo;
    DECLARE additionalProcessingInfo REFERENCE TO 	Environment.variables.EventData.additionalProcessingInfo;
    DECLARE enrichmentDataInfo 		REFERENCE TO 	Environment.variables.EventData.enrichmentDataInfo;

    SET afterEnrichmentInfo = NULL;
    SET businessLogicInfo = NULL;
    SET processingInfo = NULL;
    SET additionalProcessingInfo = NULL;
    SET enrichmentDataInfo = NULL;

    SET OutputRoot.afterEnrichment = afterEnrichmentInfo;
    SET OutputRoot.businessLogic = businessLogicInfo;
    SET OutputRoot.processing = processingInfo;
    SET OutputRoot.additionalProcessing = additionalProcessingInfo;
    SET OutputRoot.enrichmentData = enrichmentDataInfo;

    RETURN TRUE;
END;

CREATE PROCEDURE CopyMessageHeaders() BEGIN
    DECLARE I INTEGER 1;
    DECLARE J INTEGER;
    SET J = CARDINALITY(InputRoot.*[]);
    WHILE I < J DO
        SET OutputRoot.*[I] = InputRoot.*[I];
        SET I = I + 1;
    END WHILE;
END;

CREATE PROCEDURE CopyEntireMessage() BEGIN
    SET OutputRoot = InputRoot;
END;
END MODULE;