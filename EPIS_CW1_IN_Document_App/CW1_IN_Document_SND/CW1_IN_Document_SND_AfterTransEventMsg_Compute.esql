CREATE COMPUTE MODULE CW1_IN_Document_SND_AfterTransEventMsg_Compute
CREATE FUNCTION Main() RETURNS BOOLEAN
BEGIN
    DECLARE shipmentInfo 		REFERENCE TO 	Environment.variables.EventData.shipmentInfo;
    DECLARE sourceCompany 		REFERENCE TO 	Environment.variables.EventData.sourceCompany;
    DECLARE targetCompany 		REFERENCE TO 	Environment.variables.EventData.targetCompany;
    DECLARE integrationDetails REFERENCE TO 	Environment.variables.EventData.integrationDetails;
    DECLARE eventData 		REFERENCE TO 	Environment.variables.EventData.eventData;

    DECLARE customsDeclarationId INTEGER;
    DECLARE eAdapterRecepientId INTEGER;
    DECLARE isPublishedFlag BOOLEAN;
    DECLARE mainCompanyInCountry CHARACTER;
    DECLARE shipmentId INTEGER;

    SET sourceCompany.CompanyName = 'Source Company Name';
    SET targetCompany.CompanyName = 'Target Company Name';
    SET eventData.EventType = 'AfterTransEvent';

    SET customsDeclarationId = proc_CustomsDeclaration_GetIdByReference(shipmentInfo.ShipmentReference);
    SET eAdapterRecepientId = sp_Get_EAdapterRecepientId(eventData.EventID);
    SET isPublishedFlag = proc_EDocument_GetIsPublishedFlag(shipmentInfo.DocumentID);
    SET mainCompanyInCountry = sp_GetMainCompanyInCountry(shipmentInfo.CountryCode);
    SET shipmentId = sp_Shipment_GetIdBySSN(shipmentInfo.SSN);

    SET OutputRoot.XMLNSC.ShipmentInfo.ShipmentID = shipmentId;
    SET OutputRoot.XMLNSC.EventData.EventType = eventData.EventType;
    SET OutputRoot.XMLNSC.SourceCompany.CompanyName = sourceCompany.CompanyName;
    SET OutputRoot.XMLNSC.TargetCompany.CompanyName = targetCompany.CompanyName;

    RETURN TRUE;
END;

CREATE PROCEDURE CopyMessageHeaders() BEGIN
    DECLARE I INTEGER 1;
    DECLARE J INTEGER;
    SET J = CARDINALITY(InputRoot.*[]);
    WHILE I < J DO
        SET OutputRoot.*[I] = InputRoot.*[I];
        SET I = I + 1;
    END WHILE;
END;

CREATE PROCEDURE CopyEntireMessage() BEGIN
    SET OutputRoot = InputRoot;
END;
END MODULE;