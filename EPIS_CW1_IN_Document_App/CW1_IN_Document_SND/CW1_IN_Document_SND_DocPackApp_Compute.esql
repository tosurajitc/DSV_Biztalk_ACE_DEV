CREATE COMPUTE MODULE CW1_IN_Document_SND_DocPackApp_Compute.esql

CREATE FUNCTION Main() RETURNS BOOLEAN
BEGIN
    DECLARE shipmentInfo 		REFERENCE TO 	Environment.variables.EventData.shipmentInfo;
    DECLARE sourceCompany 		REFERENCE TO 	Environment.variables.EventData.sourceCompany;
    DECLARE targetCompany 		REFERENCE TO 	Environment.variables.EventData.targetCompany;
    DECLARE integrationDetails REFERENCE TO 	Environment.variables.EventData.integrationDetails;
    DECLARE dataPayload 		REFERENCE TO 	Environment.variables.EventData.dataPayload;

    DECLARE customsDeclarationId INTEGER;
    DECLARE eAdapterRecepientId INTEGER;
    DECLARE isPublishedFlag BOOLEAN;
    DECLARE mainCompanyInCountry CHARACTER;
    DECLARE shipmentIdBySSN INTEGER;

    SET sourceCompany.CustomsReference = 'ABC123';
    SET targetCompany.CountryCode = 'US';
    SET dataPayload.DocumentType = 'CDM';

    SET customsDeclarationId = proc_CustomsDeclaration_GetIdByReference(sourceCompany.CustomsReference);
    SET eAdapterRecepientId = sp_Get_EAdapterRecepientId(targetCompany.CountryCode);
    SET isPublishedFlag = proc_EDocument_GetIsPublishedFlag(dataPayload.DocumentType);
    SET mainCompanyInCountry = sp_GetMainCompanyInCountry(targetCompany.CountryCode);
    SET shipmentIdBySSN = sp_Shipment_GetIdBySSN(sourceCompany.SSN);

    SET OutputRoot.ShipmentInfo.ShipmentId = shipmentIdBySSN;
    SET OutputRoot.SourceCompany.MainCompanyInCountry = mainCompanyInCountry;
    SET OutputRoot.TargetCompany.EAdapterRecepientId = eAdapterRecepientId;
    SET OutputRoot.DataPayload.IsPublishedFlag = isPublishedFlag;
    SET OutputRoot.CustomsDeclarationId = customsDeclarationId;

    SET OutputRoot.SourceCompany = sourceCompany;
    SET OutputRoot.TargetCompany = targetCompany;
    SET OutputRoot.DataPayload = dataPayload;

    RETURN TRUE;
END;

CREATE PROCEDURE CopyMessageHeaders() BEGIN
    DECLARE I INTEGER 1;
    DECLARE J INTEGER;
    SET J = CARDINALITY(InputRoot.*[]);
    WHILE I < J DO
        SET OutputRoot.*[I] = InputRoot.*[I];
        SET I = I + 1;
    END WHILE;
END;

CREATE PROCEDURE CopyEntireMessage() BEGIN
    SET OutputRoot = InputRoot;
END;
END MODULE;